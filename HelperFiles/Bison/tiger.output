Terminals unused in grammar

   LBRACK
   RBRACK
   ARRAY
   CONTINUE
   RETURN
   TYPEDEF
   STRUCT
   BREAK
   DEFINE
   INCLUDE


State 90 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: fncd
    2        | fnc
    3        | program fnc
    4        | program fncd

    5 stms: stm
    6     | stms stm

    7 stm: exp SEMICOLON
    8    | blocks
    9    | WHILE LPAREN exp RPAREN exp SEMICOLON
   10    | WHILE LPAREN exp RPAREN blocks
   11    | FOR LPAREN exp SEMICOLON exp SEMICOLON exp RPAREN exp SEMICOLON
   12    | FOR LPAREN exp SEMICOLON exp SEMICOLON exp RPAREN blocks
   13    | swstm
   14    | ifstm

   15 blocks: LBRACE stms RBRACE

   16 exp: ID
   17    | INT
   18    | CHAR
   19    | STRING
   20    | exp COMMA exp
   21    | lv ASSIGN exp
   22    | exp OR exp
   23    | exp AND exp
   24    | exp EQ exp
   25    | exp NEQ exp
   26    | exp LT exp
   27    | exp LE exp
   28    | exp GT exp
   29    | exp GE exp
   30    | exp PLUS exp
   31    | exp MINUS exp
   32    | exp TIMES exp
   33    | exp DIVIDE exp
   34    | SIZEOF exp
   35    | NOT exp
   36    | lv DOT lv
   37    | fncc

   38 lv: ID

   39 ifstm: IF LPAREN exp RPAREN stm ELSE stm
   40      | IF LPAREN exp RPAREN stm

   41 swstm: SWITCH LPAREN ID RPAREN LBRACE swcases RBRACE

   42 swcases: swcase
   43        | swcase DEFAULT COLON stm

   44 swcase: CASE COLON stms
   45       | swcase CASE COLON stms

   46 fnc: ID ID LPAREN prls RPAREN LBRACE stms RBRACE

   47 fncd: ID ID LPAREN prls RPAREN SEMICOLON

   48 fncc: ID LPAREN exp RPAREN

   49 prls: ID
   50     | ID ID
   51     | prls COMMA prls


Terminals, with rules where they appear

$end (0) 0
error (256)
ID (258) 16 38 41 46 47 48 49 50
STRING (259) 19
INT (260) 17
CHAR (261) 18
COMMA (262) 20 51
COLON (263) 43 44 45
SEMICOLON (264) 7 9 11 12 47
LPAREN (265) 9 10 11 12 39 40 41 46 47 48
RPAREN (266) 9 10 11 12 39 40 41 46 47 48
LBRACK (267)
RBRACK (268)
LBRACE (269) 15 41 46
RBRACE (270) 15 41 46
DOT (271) 36
PLUS (272) 30
MINUS (273) 31
TIMES (274) 32
DIVIDE (275) 33
EQ (276) 24
NEQ (277) 25
LT (278) 26
LE (279) 27
GT (280) 28
GE (281) 29
AND (282) 23
OR (283) 22
ASSIGN (284) 21
ARRAY (285)
IF (286) 39 40
CONTINUE (287)
ELSE (288) 39
WHILE (289) 9 10
FOR (290) 11 12
RETURN (291)
SIZEOF (292) 34
TYPEDEF (293)
STRUCT (294)
SWITCH (295) 41
CASE (296) 44 45
BREAK (297)
DEFAULT (298) 43
DEFINE (299)
INCLUDE (300)
NOT (301) 35


Nonterminals, with rules where they appear

$accept (47)
    on left: 0
program (48)
    on left: 1 2 3 4, on right: 0 3 4
stms (49)
    on left: 5 6, on right: 6 15 44 45 46
stm (50)
    on left: 7 8 9 10 11 12 13 14, on right: 5 6 39 40 43
blocks (51)
    on left: 15, on right: 8 10 12
exp (52)
    on left: 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33
    34 35 36 37, on right: 7 9 10 11 12 20 21 22 23 24 25 26 27 28
    29 30 31 32 33 34 35 39 40 48
lv (53)
    on left: 38, on right: 21 36
ifstm (54)
    on left: 39 40, on right: 14
swstm (55)
    on left: 41, on right: 13
swcases (56)
    on left: 42 43, on right: 41
swcase (57)
    on left: 44 45, on right: 42 43 45
fnc (58)
    on left: 46, on right: 2 3
fncd (59)
    on left: 47, on right: 1 4
fncc (60)
    on left: 48, on right: 37
prls (61)
    on left: 49 50 51, on right: 46 47 51


State 0

    0 $accept: . program $end

    ID  shift, and go to state 1

    program  go to state 2
    fnc      go to state 3
    fncd     go to state 4


State 1

   46 fnc: ID . ID LPAREN prls RPAREN LBRACE stms RBRACE
   47 fncd: ID . ID LPAREN prls RPAREN SEMICOLON

    ID  shift, and go to state 5


State 2

    0 $accept: program . $end
    3 program: program . fnc
    4        | program . fncd

    $end  shift, and go to state 6
    ID    shift, and go to state 1

    fnc   go to state 7
    fncd  go to state 8


State 3

    2 program: fnc .

    $default  reduce using rule 2 (program)


State 4

    1 program: fncd .

    $default  reduce using rule 1 (program)


State 5

   46 fnc: ID ID . LPAREN prls RPAREN LBRACE stms RBRACE
   47 fncd: ID ID . LPAREN prls RPAREN SEMICOLON

    LPAREN  shift, and go to state 9


State 6

    0 $accept: program $end .

    $default  accept


State 7

    3 program: program fnc .

    $default  reduce using rule 3 (program)


State 8

    4 program: program fncd .

    $default  reduce using rule 4 (program)


State 9

   46 fnc: ID ID LPAREN . prls RPAREN LBRACE stms RBRACE
   47 fncd: ID ID LPAREN . prls RPAREN SEMICOLON

    ID  shift, and go to state 10

    prls  go to state 11


State 10

   49 prls: ID .
   50     | ID . ID

    ID  shift, and go to state 12

    $default  reduce using rule 49 (prls)


State 11

   46 fnc: ID ID LPAREN prls . RPAREN LBRACE stms RBRACE
   47 fncd: ID ID LPAREN prls . RPAREN SEMICOLON
   51 prls: prls . COMMA prls

    COMMA   shift, and go to state 13
    RPAREN  shift, and go to state 14


State 12

   50 prls: ID ID .

    $default  reduce using rule 50 (prls)


State 13

   51 prls: prls COMMA . prls

    ID  shift, and go to state 10

    prls  go to state 15


State 14

   46 fnc: ID ID LPAREN prls RPAREN . LBRACE stms RBRACE
   47 fncd: ID ID LPAREN prls RPAREN . SEMICOLON

    SEMICOLON  shift, and go to state 16
    LBRACE     shift, and go to state 17


State 15

   51 prls: prls . COMMA prls
   51     | prls COMMA prls .

    $default  reduce using rule 51 (prls)


State 16

   47 fncd: ID ID LPAREN prls RPAREN SEMICOLON .

    $default  reduce using rule 47 (fncd)


State 17

   46 fnc: ID ID LPAREN prls RPAREN LBRACE . stms RBRACE

    ID      shift, and go to state 18
    STRING  shift, and go to state 19
    INT     shift, and go to state 20
    CHAR    shift, and go to state 21
    LBRACE  shift, and go to state 22
    IF      shift, and go to state 23
    WHILE   shift, and go to state 24
    FOR     shift, and go to state 25
    SIZEOF  shift, and go to state 26
    SWITCH  shift, and go to state 27
    NOT     shift, and go to state 28

    stms    go to state 29
    stm     go to state 30
    blocks  go to state 31
    exp     go to state 32
    lv      go to state 33
    ifstm   go to state 34
    swstm   go to state 35
    fncc    go to state 36


State 18

   16 exp: ID .
   38 lv: ID .
   48 fncc: ID . LPAREN exp RPAREN

    LPAREN  shift, and go to state 37

    DOT       reduce using rule 38 (lv)
    ASSIGN    reduce using rule 38 (lv)
    $default  reduce using rule 16 (exp)


State 19

   19 exp: STRING .

    $default  reduce using rule 19 (exp)


State 20

   17 exp: INT .

    $default  reduce using rule 17 (exp)


State 21

   18 exp: CHAR .

    $default  reduce using rule 18 (exp)


State 22

   15 blocks: LBRACE . stms RBRACE

    ID      shift, and go to state 18
    STRING  shift, and go to state 19
    INT     shift, and go to state 20
    CHAR    shift, and go to state 21
    LBRACE  shift, and go to state 22
    IF      shift, and go to state 23
    WHILE   shift, and go to state 24
    FOR     shift, and go to state 25
    SIZEOF  shift, and go to state 26
    SWITCH  shift, and go to state 27
    NOT     shift, and go to state 28

    stms    go to state 38
    stm     go to state 30
    blocks  go to state 31
    exp     go to state 32
    lv      go to state 33
    ifstm   go to state 34
    swstm   go to state 35
    fncc    go to state 36


State 23

   39 ifstm: IF . LPAREN exp RPAREN stm ELSE stm
   40      | IF . LPAREN exp RPAREN stm

    LPAREN  shift, and go to state 39


State 24

    9 stm: WHILE . LPAREN exp RPAREN exp SEMICOLON
   10    | WHILE . LPAREN exp RPAREN blocks

    LPAREN  shift, and go to state 40


State 25

   11 stm: FOR . LPAREN exp SEMICOLON exp SEMICOLON exp RPAREN exp SEMICOLON
   12    | FOR . LPAREN exp SEMICOLON exp SEMICOLON exp RPAREN blocks

    LPAREN  shift, and go to state 41


State 26

   34 exp: SIZEOF . exp

    ID      shift, and go to state 18
    STRING  shift, and go to state 19
    INT     shift, and go to state 20
    CHAR    shift, and go to state 21
    SIZEOF  shift, and go to state 26
    NOT     shift, and go to state 28

    exp   go to state 42
    lv    go to state 33
    fncc  go to state 36


State 27

   41 swstm: SWITCH . LPAREN ID RPAREN LBRACE swcases RBRACE

    LPAREN  shift, and go to state 43


State 28

   35 exp: NOT . exp

    ID      shift, and go to state 18
    STRING  shift, and go to state 19
    INT     shift, and go to state 20
    CHAR    shift, and go to state 21
    SIZEOF  shift, and go to state 26
    NOT     shift, and go to state 28

    exp   go to state 44
    lv    go to state 33
    fncc  go to state 36


State 29

    6 stms: stms . stm
   46 fnc: ID ID LPAREN prls RPAREN LBRACE stms . RBRACE

    ID      shift, and go to state 18
    STRING  shift, and go to state 19
    INT     shift, and go to state 20
    CHAR    shift, and go to state 21
    LBRACE  shift, and go to state 22
    RBRACE  shift, and go to state 45
    IF      shift, and go to state 23
    WHILE   shift, and go to state 24
    FOR     shift, and go to state 25
    SIZEOF  shift, and go to state 26
    SWITCH  shift, and go to state 27
    NOT     shift, and go to state 28

    stm     go to state 46
    blocks  go to state 31
    exp     go to state 32
    lv      go to state 33
    ifstm   go to state 34
    swstm   go to state 35
    fncc    go to state 36


State 30

    5 stms: stm .

    $default  reduce using rule 5 (stms)


State 31

    8 stm: blocks .

    $default  reduce using rule 8 (stm)


State 32

    7 stm: exp . SEMICOLON
   20 exp: exp . COMMA exp
   22    | exp . OR exp
   23    | exp . AND exp
   24    | exp . EQ exp
   25    | exp . NEQ exp
   26    | exp . LT exp
   27    | exp . LE exp
   28    | exp . GT exp
   29    | exp . GE exp
   30    | exp . PLUS exp
   31    | exp . MINUS exp
   32    | exp . TIMES exp
   33    | exp . DIVIDE exp

    COMMA      shift, and go to state 47
    SEMICOLON  shift, and go to state 48
    PLUS       shift, and go to state 49
    MINUS      shift, and go to state 50
    TIMES      shift, and go to state 51
    DIVIDE     shift, and go to state 52
    EQ         shift, and go to state 53
    NEQ        shift, and go to state 54
    LT         shift, and go to state 55
    LE         shift, and go to state 56
    GT         shift, and go to state 57
    GE         shift, and go to state 58
    AND        shift, and go to state 59
    OR         shift, and go to state 60


State 33

   21 exp: lv . ASSIGN exp
   36    | lv . DOT lv

    DOT     shift, and go to state 61
    ASSIGN  shift, and go to state 62


State 34

   14 stm: ifstm .

    $default  reduce using rule 14 (stm)


State 35

   13 stm: swstm .

    $default  reduce using rule 13 (stm)


State 36

   37 exp: fncc .

    $default  reduce using rule 37 (exp)


State 37

   48 fncc: ID LPAREN . exp RPAREN

    ID      shift, and go to state 18
    STRING  shift, and go to state 19
    INT     shift, and go to state 20
    CHAR    shift, and go to state 21
    SIZEOF  shift, and go to state 26
    NOT     shift, and go to state 28

    exp   go to state 63
    lv    go to state 33
    fncc  go to state 36


State 38

    6 stms: stms . stm
   15 blocks: LBRACE stms . RBRACE

    ID      shift, and go to state 18
    STRING  shift, and go to state 19
    INT     shift, and go to state 20
    CHAR    shift, and go to state 21
    LBRACE  shift, and go to state 22
    RBRACE  shift, and go to state 64
    IF      shift, and go to state 23
    WHILE   shift, and go to state 24
    FOR     shift, and go to state 25
    SIZEOF  shift, and go to state 26
    SWITCH  shift, and go to state 27
    NOT     shift, and go to state 28

    stm     go to state 46
    blocks  go to state 31
    exp     go to state 32
    lv      go to state 33
    ifstm   go to state 34
    swstm   go to state 35
    fncc    go to state 36


State 39

   39 ifstm: IF LPAREN . exp RPAREN stm ELSE stm
   40      | IF LPAREN . exp RPAREN stm

    ID      shift, and go to state 18
    STRING  shift, and go to state 19
    INT     shift, and go to state 20
    CHAR    shift, and go to state 21
    SIZEOF  shift, and go to state 26
    NOT     shift, and go to state 28

    exp   go to state 65
    lv    go to state 33
    fncc  go to state 36


State 40

    9 stm: WHILE LPAREN . exp RPAREN exp SEMICOLON
   10    | WHILE LPAREN . exp RPAREN blocks

    ID      shift, and go to state 18
    STRING  shift, and go to state 19
    INT     shift, and go to state 20
    CHAR    shift, and go to state 21
    SIZEOF  shift, and go to state 26
    NOT     shift, and go to state 28

    exp   go to state 66
    lv    go to state 33
    fncc  go to state 36


State 41

   11 stm: FOR LPAREN . exp SEMICOLON exp SEMICOLON exp RPAREN exp SEMICOLON
   12    | FOR LPAREN . exp SEMICOLON exp SEMICOLON exp RPAREN blocks

    ID      shift, and go to state 18
    STRING  shift, and go to state 19
    INT     shift, and go to state 20
    CHAR    shift, and go to state 21
    SIZEOF  shift, and go to state 26
    NOT     shift, and go to state 28

    exp   go to state 67
    lv    go to state 33
    fncc  go to state 36


State 42

   20 exp: exp . COMMA exp
   22    | exp . OR exp
   23    | exp . AND exp
   24    | exp . EQ exp
   25    | exp . NEQ exp
   26    | exp . LT exp
   27    | exp . LE exp
   28    | exp . GT exp
   29    | exp . GE exp
   30    | exp . PLUS exp
   31    | exp . MINUS exp
   32    | exp . TIMES exp
   33    | exp . DIVIDE exp
   34    | SIZEOF exp .

    $default  reduce using rule 34 (exp)


State 43

   41 swstm: SWITCH LPAREN . ID RPAREN LBRACE swcases RBRACE

    ID  shift, and go to state 68


State 44

   20 exp: exp . COMMA exp
   22    | exp . OR exp
   23    | exp . AND exp
   24    | exp . EQ exp
   25    | exp . NEQ exp
   26    | exp . LT exp
   27    | exp . LE exp
   28    | exp . GT exp
   29    | exp . GE exp
   30    | exp . PLUS exp
   31    | exp . MINUS exp
   32    | exp . TIMES exp
   33    | exp . DIVIDE exp
   35    | NOT exp .

    $default  reduce using rule 35 (exp)


State 45

   46 fnc: ID ID LPAREN prls RPAREN LBRACE stms RBRACE .

    $default  reduce using rule 46 (fnc)


State 46

    6 stms: stms stm .

    $default  reduce using rule 6 (stms)


State 47

   20 exp: exp COMMA . exp

    ID      shift, and go to state 18
    STRING  shift, and go to state 19
    INT     shift, and go to state 20
    CHAR    shift, and go to state 21
    SIZEOF  shift, and go to state 26
    NOT     shift, and go to state 28

    exp   go to state 69
    lv    go to state 33
    fncc  go to state 36


State 48

    7 stm: exp SEMICOLON .

    $default  reduce using rule 7 (stm)


State 49

   30 exp: exp PLUS . exp

    ID      shift, and go to state 18
    STRING  shift, and go to state 19
    INT     shift, and go to state 20
    CHAR    shift, and go to state 21
    SIZEOF  shift, and go to state 26
    NOT     shift, and go to state 28

    exp   go to state 70
    lv    go to state 33
    fncc  go to state 36


State 50

   31 exp: exp MINUS . exp

    ID      shift, and go to state 18
    STRING  shift, and go to state 19
    INT     shift, and go to state 20
    CHAR    shift, and go to state 21
    SIZEOF  shift, and go to state 26
    NOT     shift, and go to state 28

    exp   go to state 71
    lv    go to state 33
    fncc  go to state 36


State 51

   32 exp: exp TIMES . exp

    ID      shift, and go to state 18
    STRING  shift, and go to state 19
    INT     shift, and go to state 20
    CHAR    shift, and go to state 21
    SIZEOF  shift, and go to state 26
    NOT     shift, and go to state 28

    exp   go to state 72
    lv    go to state 33
    fncc  go to state 36


State 52

   33 exp: exp DIVIDE . exp

    ID      shift, and go to state 18
    STRING  shift, and go to state 19
    INT     shift, and go to state 20
    CHAR    shift, and go to state 21
    SIZEOF  shift, and go to state 26
    NOT     shift, and go to state 28

    exp   go to state 73
    lv    go to state 33
    fncc  go to state 36


State 53

   24 exp: exp EQ . exp

    ID      shift, and go to state 18
    STRING  shift, and go to state 19
    INT     shift, and go to state 20
    CHAR    shift, and go to state 21
    SIZEOF  shift, and go to state 26
    NOT     shift, and go to state 28

    exp   go to state 74
    lv    go to state 33
    fncc  go to state 36


State 54

   25 exp: exp NEQ . exp

    ID      shift, and go to state 18
    STRING  shift, and go to state 19
    INT     shift, and go to state 20
    CHAR    shift, and go to state 21
    SIZEOF  shift, and go to state 26
    NOT     shift, and go to state 28

    exp   go to state 75
    lv    go to state 33
    fncc  go to state 36


State 55

   26 exp: exp LT . exp

    ID      shift, and go to state 18
    STRING  shift, and go to state 19
    INT     shift, and go to state 20
    CHAR    shift, and go to state 21
    SIZEOF  shift, and go to state 26
    NOT     shift, and go to state 28

    exp   go to state 76
    lv    go to state 33
    fncc  go to state 36


State 56

   27 exp: exp LE . exp

    ID      shift, and go to state 18
    STRING  shift, and go to state 19
    INT     shift, and go to state 20
    CHAR    shift, and go to state 21
    SIZEOF  shift, and go to state 26
    NOT     shift, and go to state 28

    exp   go to state 77
    lv    go to state 33
    fncc  go to state 36


State 57

   28 exp: exp GT . exp

    ID      shift, and go to state 18
    STRING  shift, and go to state 19
    INT     shift, and go to state 20
    CHAR    shift, and go to state 21
    SIZEOF  shift, and go to state 26
    NOT     shift, and go to state 28

    exp   go to state 78
    lv    go to state 33
    fncc  go to state 36


State 58

   29 exp: exp GE . exp

    ID      shift, and go to state 18
    STRING  shift, and go to state 19
    INT     shift, and go to state 20
    CHAR    shift, and go to state 21
    SIZEOF  shift, and go to state 26
    NOT     shift, and go to state 28

    exp   go to state 79
    lv    go to state 33
    fncc  go to state 36


State 59

   23 exp: exp AND . exp

    ID      shift, and go to state 18
    STRING  shift, and go to state 19
    INT     shift, and go to state 20
    CHAR    shift, and go to state 21
    SIZEOF  shift, and go to state 26
    NOT     shift, and go to state 28

    exp   go to state 80
    lv    go to state 33
    fncc  go to state 36


State 60

   22 exp: exp OR . exp

    ID      shift, and go to state 18
    STRING  shift, and go to state 19
    INT     shift, and go to state 20
    CHAR    shift, and go to state 21
    SIZEOF  shift, and go to state 26
    NOT     shift, and go to state 28

    exp   go to state 81
    lv    go to state 33
    fncc  go to state 36


State 61

   36 exp: lv DOT . lv

    ID  shift, and go to state 82

    lv  go to state 83


State 62

   21 exp: lv ASSIGN . exp

    ID      shift, and go to state 18
    STRING  shift, and go to state 19
    INT     shift, and go to state 20
    CHAR    shift, and go to state 21
    SIZEOF  shift, and go to state 26
    NOT     shift, and go to state 28

    exp   go to state 84
    lv    go to state 33
    fncc  go to state 36


State 63

   20 exp: exp . COMMA exp
   22    | exp . OR exp
   23    | exp . AND exp
   24    | exp . EQ exp
   25    | exp . NEQ exp
   26    | exp . LT exp
   27    | exp . LE exp
   28    | exp . GT exp
   29    | exp . GE exp
   30    | exp . PLUS exp
   31    | exp . MINUS exp
   32    | exp . TIMES exp
   33    | exp . DIVIDE exp
   48 fncc: ID LPAREN exp . RPAREN

    COMMA   shift, and go to state 47
    RPAREN  shift, and go to state 85
    PLUS    shift, and go to state 49
    MINUS   shift, and go to state 50
    TIMES   shift, and go to state 51
    DIVIDE  shift, and go to state 52
    EQ      shift, and go to state 53
    NEQ     shift, and go to state 54
    LT      shift, and go to state 55
    LE      shift, and go to state 56
    GT      shift, and go to state 57
    GE      shift, and go to state 58
    AND     shift, and go to state 59
    OR      shift, and go to state 60


State 64

   15 blocks: LBRACE stms RBRACE .

    $default  reduce using rule 15 (blocks)


State 65

   20 exp: exp . COMMA exp
   22    | exp . OR exp
   23    | exp . AND exp
   24    | exp . EQ exp
   25    | exp . NEQ exp
   26    | exp . LT exp
   27    | exp . LE exp
   28    | exp . GT exp
   29    | exp . GE exp
   30    | exp . PLUS exp
   31    | exp . MINUS exp
   32    | exp . TIMES exp
   33    | exp . DIVIDE exp
   39 ifstm: IF LPAREN exp . RPAREN stm ELSE stm
   40      | IF LPAREN exp . RPAREN stm

    COMMA   shift, and go to state 47
    RPAREN  shift, and go to state 86
    PLUS    shift, and go to state 49
    MINUS   shift, and go to state 50
    TIMES   shift, and go to state 51
    DIVIDE  shift, and go to state 52
    EQ      shift, and go to state 53
    NEQ     shift, and go to state 54
    LT      shift, and go to state 55
    LE      shift, and go to state 56
    GT      shift, and go to state 57
    GE      shift, and go to state 58
    AND     shift, and go to state 59
    OR      shift, and go to state 60


State 66

    9 stm: WHILE LPAREN exp . RPAREN exp SEMICOLON
   10    | WHILE LPAREN exp . RPAREN blocks
   20 exp: exp . COMMA exp
   22    | exp . OR exp
   23    | exp . AND exp
   24    | exp . EQ exp
   25    | exp . NEQ exp
   26    | exp . LT exp
   27    | exp . LE exp
   28    | exp . GT exp
   29    | exp . GE exp
   30    | exp . PLUS exp
   31    | exp . MINUS exp
   32    | exp . TIMES exp
   33    | exp . DIVIDE exp

    COMMA   shift, and go to state 47
    RPAREN  shift, and go to state 87
    PLUS    shift, and go to state 49
    MINUS   shift, and go to state 50
    TIMES   shift, and go to state 51
    DIVIDE  shift, and go to state 52
    EQ      shift, and go to state 53
    NEQ     shift, and go to state 54
    LT      shift, and go to state 55
    LE      shift, and go to state 56
    GT      shift, and go to state 57
    GE      shift, and go to state 58
    AND     shift, and go to state 59
    OR      shift, and go to state 60


State 67

   11 stm: FOR LPAREN exp . SEMICOLON exp SEMICOLON exp RPAREN exp SEMICOLON
   12    | FOR LPAREN exp . SEMICOLON exp SEMICOLON exp RPAREN blocks
   20 exp: exp . COMMA exp
   22    | exp . OR exp
   23    | exp . AND exp
   24    | exp . EQ exp
   25    | exp . NEQ exp
   26    | exp . LT exp
   27    | exp . LE exp
   28    | exp . GT exp
   29    | exp . GE exp
   30    | exp . PLUS exp
   31    | exp . MINUS exp
   32    | exp . TIMES exp
   33    | exp . DIVIDE exp

    COMMA      shift, and go to state 47
    SEMICOLON  shift, and go to state 88
    PLUS       shift, and go to state 49
    MINUS      shift, and go to state 50
    TIMES      shift, and go to state 51
    DIVIDE     shift, and go to state 52
    EQ         shift, and go to state 53
    NEQ        shift, and go to state 54
    LT         shift, and go to state 55
    LE         shift, and go to state 56
    GT         shift, and go to state 57
    GE         shift, and go to state 58
    AND        shift, and go to state 59
    OR         shift, and go to state 60


State 68

   41 swstm: SWITCH LPAREN ID . RPAREN LBRACE swcases RBRACE

    RPAREN  shift, and go to state 89


State 69

   20 exp: exp . COMMA exp
   20    | exp COMMA exp .
   22    | exp . OR exp
   23    | exp . AND exp
   24    | exp . EQ exp
   25    | exp . NEQ exp
   26    | exp . LT exp
   27    | exp . LE exp
   28    | exp . GT exp
   29    | exp . GE exp
   30    | exp . PLUS exp
   31    | exp . MINUS exp
   32    | exp . TIMES exp
   33    | exp . DIVIDE exp

    PLUS    shift, and go to state 49
    MINUS   shift, and go to state 50
    TIMES   shift, and go to state 51
    DIVIDE  shift, and go to state 52
    EQ      shift, and go to state 53
    NEQ     shift, and go to state 54
    LT      shift, and go to state 55
    LE      shift, and go to state 56
    GT      shift, and go to state 57
    GE      shift, and go to state 58
    AND     shift, and go to state 59
    OR      shift, and go to state 60

    $default  reduce using rule 20 (exp)


State 70

   20 exp: exp . COMMA exp
   22    | exp . OR exp
   23    | exp . AND exp
   24    | exp . EQ exp
   25    | exp . NEQ exp
   26    | exp . LT exp
   27    | exp . LE exp
   28    | exp . GT exp
   29    | exp . GE exp
   30    | exp . PLUS exp
   30    | exp PLUS exp .
   31    | exp . MINUS exp
   32    | exp . TIMES exp
   33    | exp . DIVIDE exp

    TIMES   shift, and go to state 51
    DIVIDE  shift, and go to state 52

    $default  reduce using rule 30 (exp)


State 71

   20 exp: exp . COMMA exp
   22    | exp . OR exp
   23    | exp . AND exp
   24    | exp . EQ exp
   25    | exp . NEQ exp
   26    | exp . LT exp
   27    | exp . LE exp
   28    | exp . GT exp
   29    | exp . GE exp
   30    | exp . PLUS exp
   31    | exp . MINUS exp
   31    | exp MINUS exp .
   32    | exp . TIMES exp
   33    | exp . DIVIDE exp

    TIMES   shift, and go to state 51
    DIVIDE  shift, and go to state 52

    $default  reduce using rule 31 (exp)


State 72

   20 exp: exp . COMMA exp
   22    | exp . OR exp
   23    | exp . AND exp
   24    | exp . EQ exp
   25    | exp . NEQ exp
   26    | exp . LT exp
   27    | exp . LE exp
   28    | exp . GT exp
   29    | exp . GE exp
   30    | exp . PLUS exp
   31    | exp . MINUS exp
   32    | exp . TIMES exp
   32    | exp TIMES exp .
   33    | exp . DIVIDE exp

    $default  reduce using rule 32 (exp)


State 73

   20 exp: exp . COMMA exp
   22    | exp . OR exp
   23    | exp . AND exp
   24    | exp . EQ exp
   25    | exp . NEQ exp
   26    | exp . LT exp
   27    | exp . LE exp
   28    | exp . GT exp
   29    | exp . GE exp
   30    | exp . PLUS exp
   31    | exp . MINUS exp
   32    | exp . TIMES exp
   33    | exp . DIVIDE exp
   33    | exp DIVIDE exp .

    $default  reduce using rule 33 (exp)


State 74

   20 exp: exp . COMMA exp
   22    | exp . OR exp
   23    | exp . AND exp
   24    | exp . EQ exp
   24    | exp EQ exp .
   25    | exp . NEQ exp
   26    | exp . LT exp
   27    | exp . LE exp
   28    | exp . GT exp
   29    | exp . GE exp
   30    | exp . PLUS exp
   31    | exp . MINUS exp
   32    | exp . TIMES exp
   33    | exp . DIVIDE exp

    PLUS    shift, and go to state 49
    MINUS   shift, and go to state 50
    TIMES   shift, and go to state 51
    DIVIDE  shift, and go to state 52
    LT      shift, and go to state 55
    LE      shift, and go to state 56
    GT      shift, and go to state 57
    GE      shift, and go to state 58

    $default  reduce using rule 24 (exp)


State 75

   20 exp: exp . COMMA exp
   22    | exp . OR exp
   23    | exp . AND exp
   24    | exp . EQ exp
   25    | exp . NEQ exp
   25    | exp NEQ exp .
   26    | exp . LT exp
   27    | exp . LE exp
   28    | exp . GT exp
   29    | exp . GE exp
   30    | exp . PLUS exp
   31    | exp . MINUS exp
   32    | exp . TIMES exp
   33    | exp . DIVIDE exp

    PLUS    shift, and go to state 49
    MINUS   shift, and go to state 50
    TIMES   shift, and go to state 51
    DIVIDE  shift, and go to state 52
    LT      shift, and go to state 55
    LE      shift, and go to state 56
    GT      shift, and go to state 57
    GE      shift, and go to state 58

    $default  reduce using rule 25 (exp)


State 76

   20 exp: exp . COMMA exp
   22    | exp . OR exp
   23    | exp . AND exp
   24    | exp . EQ exp
   25    | exp . NEQ exp
   26    | exp . LT exp
   26    | exp LT exp .
   27    | exp . LE exp
   28    | exp . GT exp
   29    | exp . GE exp
   30    | exp . PLUS exp
   31    | exp . MINUS exp
   32    | exp . TIMES exp
   33    | exp . DIVIDE exp

    PLUS    shift, and go to state 49
    MINUS   shift, and go to state 50
    TIMES   shift, and go to state 51
    DIVIDE  shift, and go to state 52

    $default  reduce using rule 26 (exp)


State 77

   20 exp: exp . COMMA exp
   22    | exp . OR exp
   23    | exp . AND exp
   24    | exp . EQ exp
   25    | exp . NEQ exp
   26    | exp . LT exp
   27    | exp . LE exp
   27    | exp LE exp .
   28    | exp . GT exp
   29    | exp . GE exp
   30    | exp . PLUS exp
   31    | exp . MINUS exp
   32    | exp . TIMES exp
   33    | exp . DIVIDE exp

    PLUS    shift, and go to state 49
    MINUS   shift, and go to state 50
    TIMES   shift, and go to state 51
    DIVIDE  shift, and go to state 52

    $default  reduce using rule 27 (exp)


State 78

   20 exp: exp . COMMA exp
   22    | exp . OR exp
   23    | exp . AND exp
   24    | exp . EQ exp
   25    | exp . NEQ exp
   26    | exp . LT exp
   27    | exp . LE exp
   28    | exp . GT exp
   28    | exp GT exp .
   29    | exp . GE exp
   30    | exp . PLUS exp
   31    | exp . MINUS exp
   32    | exp . TIMES exp
   33    | exp . DIVIDE exp

    PLUS    shift, and go to state 49
    MINUS   shift, and go to state 50
    TIMES   shift, and go to state 51
    DIVIDE  shift, and go to state 52

    $default  reduce using rule 28 (exp)


State 79

   20 exp: exp . COMMA exp
   22    | exp . OR exp
   23    | exp . AND exp
   24    | exp . EQ exp
   25    | exp . NEQ exp
   26    | exp . LT exp
   27    | exp . LE exp
   28    | exp . GT exp
   29    | exp . GE exp
   29    | exp GE exp .
   30    | exp . PLUS exp
   31    | exp . MINUS exp
   32    | exp . TIMES exp
   33    | exp . DIVIDE exp

    PLUS    shift, and go to state 49
    MINUS   shift, and go to state 50
    TIMES   shift, and go to state 51
    DIVIDE  shift, and go to state 52

    $default  reduce using rule 29 (exp)


State 80

   20 exp: exp . COMMA exp
   22    | exp . OR exp
   23    | exp . AND exp
   23    | exp AND exp .
   24    | exp . EQ exp
   25    | exp . NEQ exp
   26    | exp . LT exp
   27    | exp . LE exp
   28    | exp . GT exp
   29    | exp . GE exp
   30    | exp . PLUS exp
   31    | exp . MINUS exp
   32    | exp . TIMES exp
   33    | exp . DIVIDE exp

    PLUS    shift, and go to state 49
    MINUS   shift, and go to state 50
    TIMES   shift, and go to state 51
    DIVIDE  shift, and go to state 52
    EQ      shift, and go to state 53
    NEQ     shift, and go to state 54
    LT      shift, and go to state 55
    LE      shift, and go to state 56
    GT      shift, and go to state 57
    GE      shift, and go to state 58

    $default  reduce using rule 23 (exp)


State 81

   20 exp: exp . COMMA exp
   22    | exp . OR exp
   22    | exp OR exp .
   23    | exp . AND exp
   24    | exp . EQ exp
   25    | exp . NEQ exp
   26    | exp . LT exp
   27    | exp . LE exp
   28    | exp . GT exp
   29    | exp . GE exp
   30    | exp . PLUS exp
   31    | exp . MINUS exp
   32    | exp . TIMES exp
   33    | exp . DIVIDE exp

    PLUS    shift, and go to state 49
    MINUS   shift, and go to state 50
    TIMES   shift, and go to state 51
    DIVIDE  shift, and go to state 52
    EQ      shift, and go to state 53
    NEQ     shift, and go to state 54
    LT      shift, and go to state 55
    LE      shift, and go to state 56
    GT      shift, and go to state 57
    GE      shift, and go to state 58
    AND     shift, and go to state 59

    $default  reduce using rule 22 (exp)


State 82

   38 lv: ID .

    $default  reduce using rule 38 (lv)


State 83

   36 exp: lv DOT lv .

    $default  reduce using rule 36 (exp)


State 84

   20 exp: exp . COMMA exp
   21    | lv ASSIGN exp .
   22    | exp . OR exp
   23    | exp . AND exp
   24    | exp . EQ exp
   25    | exp . NEQ exp
   26    | exp . LT exp
   27    | exp . LE exp
   28    | exp . GT exp
   29    | exp . GE exp
   30    | exp . PLUS exp
   31    | exp . MINUS exp
   32    | exp . TIMES exp
   33    | exp . DIVIDE exp

    PLUS    shift, and go to state 49
    MINUS   shift, and go to state 50
    TIMES   shift, and go to state 51
    DIVIDE  shift, and go to state 52
    EQ      shift, and go to state 53
    NEQ     shift, and go to state 54
    LT      shift, and go to state 55
    LE      shift, and go to state 56
    GT      shift, and go to state 57
    GE      shift, and go to state 58
    AND     shift, and go to state 59
    OR      shift, and go to state 60

    $default  reduce using rule 21 (exp)


State 85

   48 fncc: ID LPAREN exp RPAREN .

    $default  reduce using rule 48 (fncc)


State 86

   39 ifstm: IF LPAREN exp RPAREN . stm ELSE stm
   40      | IF LPAREN exp RPAREN . stm

    ID      shift, and go to state 18
    STRING  shift, and go to state 19
    INT     shift, and go to state 20
    CHAR    shift, and go to state 21
    LBRACE  shift, and go to state 22
    IF      shift, and go to state 23
    WHILE   shift, and go to state 24
    FOR     shift, and go to state 25
    SIZEOF  shift, and go to state 26
    SWITCH  shift, and go to state 27
    NOT     shift, and go to state 28

    stm     go to state 90
    blocks  go to state 31
    exp     go to state 32
    lv      go to state 33
    ifstm   go to state 34
    swstm   go to state 35
    fncc    go to state 36


State 87

    9 stm: WHILE LPAREN exp RPAREN . exp SEMICOLON
   10    | WHILE LPAREN exp RPAREN . blocks

    ID      shift, and go to state 18
    STRING  shift, and go to state 19
    INT     shift, and go to state 20
    CHAR    shift, and go to state 21
    LBRACE  shift, and go to state 22
    SIZEOF  shift, and go to state 26
    NOT     shift, and go to state 28

    blocks  go to state 91
    exp     go to state 92
    lv      go to state 33
    fncc    go to state 36


State 88

   11 stm: FOR LPAREN exp SEMICOLON . exp SEMICOLON exp RPAREN exp SEMICOLON
   12    | FOR LPAREN exp SEMICOLON . exp SEMICOLON exp RPAREN blocks

    ID      shift, and go to state 18
    STRING  shift, and go to state 19
    INT     shift, and go to state 20
    CHAR    shift, and go to state 21
    SIZEOF  shift, and go to state 26
    NOT     shift, and go to state 28

    exp   go to state 93
    lv    go to state 33
    fncc  go to state 36


State 89

   41 swstm: SWITCH LPAREN ID RPAREN . LBRACE swcases RBRACE

    LBRACE  shift, and go to state 94


State 90

   39 ifstm: IF LPAREN exp RPAREN stm . ELSE stm
   40      | IF LPAREN exp RPAREN stm .

    ELSE  shift, and go to state 95

    ELSE      [reduce using rule 40 (ifstm)]
    $default  reduce using rule 40 (ifstm)


State 91

   10 stm: WHILE LPAREN exp RPAREN blocks .

    $default  reduce using rule 10 (stm)


State 92

    9 stm: WHILE LPAREN exp RPAREN exp . SEMICOLON
   20 exp: exp . COMMA exp
   22    | exp . OR exp
   23    | exp . AND exp
   24    | exp . EQ exp
   25    | exp . NEQ exp
   26    | exp . LT exp
   27    | exp . LE exp
   28    | exp . GT exp
   29    | exp . GE exp
   30    | exp . PLUS exp
   31    | exp . MINUS exp
   32    | exp . TIMES exp
   33    | exp . DIVIDE exp

    COMMA      shift, and go to state 47
    SEMICOLON  shift, and go to state 96
    PLUS       shift, and go to state 49
    MINUS      shift, and go to state 50
    TIMES      shift, and go to state 51
    DIVIDE     shift, and go to state 52
    EQ         shift, and go to state 53
    NEQ        shift, and go to state 54
    LT         shift, and go to state 55
    LE         shift, and go to state 56
    GT         shift, and go to state 57
    GE         shift, and go to state 58
    AND        shift, and go to state 59
    OR         shift, and go to state 60


State 93

   11 stm: FOR LPAREN exp SEMICOLON exp . SEMICOLON exp RPAREN exp SEMICOLON
   12    | FOR LPAREN exp SEMICOLON exp . SEMICOLON exp RPAREN blocks
   20 exp: exp . COMMA exp
   22    | exp . OR exp
   23    | exp . AND exp
   24    | exp . EQ exp
   25    | exp . NEQ exp
   26    | exp . LT exp
   27    | exp . LE exp
   28    | exp . GT exp
   29    | exp . GE exp
   30    | exp . PLUS exp
   31    | exp . MINUS exp
   32    | exp . TIMES exp
   33    | exp . DIVIDE exp

    COMMA      shift, and go to state 47
    SEMICOLON  shift, and go to state 97
    PLUS       shift, and go to state 49
    MINUS      shift, and go to state 50
    TIMES      shift, and go to state 51
    DIVIDE     shift, and go to state 52
    EQ         shift, and go to state 53
    NEQ        shift, and go to state 54
    LT         shift, and go to state 55
    LE         shift, and go to state 56
    GT         shift, and go to state 57
    GE         shift, and go to state 58
    AND        shift, and go to state 59
    OR         shift, and go to state 60


State 94

   41 swstm: SWITCH LPAREN ID RPAREN LBRACE . swcases RBRACE

    CASE  shift, and go to state 98

    swcases  go to state 99
    swcase   go to state 100


State 95

   39 ifstm: IF LPAREN exp RPAREN stm ELSE . stm

    ID      shift, and go to state 18
    STRING  shift, and go to state 19
    INT     shift, and go to state 20
    CHAR    shift, and go to state 21
    LBRACE  shift, and go to state 22
    IF      shift, and go to state 23
    WHILE   shift, and go to state 24
    FOR     shift, and go to state 25
    SIZEOF  shift, and go to state 26
    SWITCH  shift, and go to state 27
    NOT     shift, and go to state 28

    stm     go to state 101
    blocks  go to state 31
    exp     go to state 32
    lv      go to state 33
    ifstm   go to state 34
    swstm   go to state 35
    fncc    go to state 36


State 96

    9 stm: WHILE LPAREN exp RPAREN exp SEMICOLON .

    $default  reduce using rule 9 (stm)


State 97

   11 stm: FOR LPAREN exp SEMICOLON exp SEMICOLON . exp RPAREN exp SEMICOLON
   12    | FOR LPAREN exp SEMICOLON exp SEMICOLON . exp RPAREN blocks

    ID      shift, and go to state 18
    STRING  shift, and go to state 19
    INT     shift, and go to state 20
    CHAR    shift, and go to state 21
    SIZEOF  shift, and go to state 26
    NOT     shift, and go to state 28

    exp   go to state 102
    lv    go to state 33
    fncc  go to state 36


State 98

   44 swcase: CASE . COLON stms

    COLON  shift, and go to state 103


State 99

   41 swstm: SWITCH LPAREN ID RPAREN LBRACE swcases . RBRACE

    RBRACE  shift, and go to state 104


State 100

   42 swcases: swcase .
   43        | swcase . DEFAULT COLON stm
   45 swcase: swcase . CASE COLON stms

    CASE     shift, and go to state 105
    DEFAULT  shift, and go to state 106

    $default  reduce using rule 42 (swcases)


State 101

   39 ifstm: IF LPAREN exp RPAREN stm ELSE stm .

    $default  reduce using rule 39 (ifstm)


State 102

   11 stm: FOR LPAREN exp SEMICOLON exp SEMICOLON exp . RPAREN exp SEMICOLON
   12    | FOR LPAREN exp SEMICOLON exp SEMICOLON exp . RPAREN blocks
   20 exp: exp . COMMA exp
   22    | exp . OR exp
   23    | exp . AND exp
   24    | exp . EQ exp
   25    | exp . NEQ exp
   26    | exp . LT exp
   27    | exp . LE exp
   28    | exp . GT exp
   29    | exp . GE exp
   30    | exp . PLUS exp
   31    | exp . MINUS exp
   32    | exp . TIMES exp
   33    | exp . DIVIDE exp

    COMMA   shift, and go to state 47
    RPAREN  shift, and go to state 107
    PLUS    shift, and go to state 49
    MINUS   shift, and go to state 50
    TIMES   shift, and go to state 51
    DIVIDE  shift, and go to state 52
    EQ      shift, and go to state 53
    NEQ     shift, and go to state 54
    LT      shift, and go to state 55
    LE      shift, and go to state 56
    GT      shift, and go to state 57
    GE      shift, and go to state 58
    AND     shift, and go to state 59
    OR      shift, and go to state 60


State 103

   44 swcase: CASE COLON . stms

    ID      shift, and go to state 18
    STRING  shift, and go to state 19
    INT     shift, and go to state 20
    CHAR    shift, and go to state 21
    LBRACE  shift, and go to state 22
    IF      shift, and go to state 23
    WHILE   shift, and go to state 24
    FOR     shift, and go to state 25
    SIZEOF  shift, and go to state 26
    SWITCH  shift, and go to state 27
    NOT     shift, and go to state 28

    stms    go to state 108
    stm     go to state 30
    blocks  go to state 31
    exp     go to state 32
    lv      go to state 33
    ifstm   go to state 34
    swstm   go to state 35
    fncc    go to state 36


State 104

   41 swstm: SWITCH LPAREN ID RPAREN LBRACE swcases RBRACE .

    $default  reduce using rule 41 (swstm)


State 105

   45 swcase: swcase CASE . COLON stms

    COLON  shift, and go to state 109


State 106

   43 swcases: swcase DEFAULT . COLON stm

    COLON  shift, and go to state 110


State 107

   11 stm: FOR LPAREN exp SEMICOLON exp SEMICOLON exp RPAREN . exp SEMICOLON
   12    | FOR LPAREN exp SEMICOLON exp SEMICOLON exp RPAREN . blocks

    ID      shift, and go to state 18
    STRING  shift, and go to state 19
    INT     shift, and go to state 20
    CHAR    shift, and go to state 21
    LBRACE  shift, and go to state 22
    SIZEOF  shift, and go to state 26
    NOT     shift, and go to state 28

    blocks  go to state 111
    exp     go to state 112
    lv      go to state 33
    fncc    go to state 36


State 108

    6 stms: stms . stm
   44 swcase: CASE COLON stms .

    ID      shift, and go to state 18
    STRING  shift, and go to state 19
    INT     shift, and go to state 20
    CHAR    shift, and go to state 21
    LBRACE  shift, and go to state 22
    IF      shift, and go to state 23
    WHILE   shift, and go to state 24
    FOR     shift, and go to state 25
    SIZEOF  shift, and go to state 26
    SWITCH  shift, and go to state 27
    NOT     shift, and go to state 28

    $default  reduce using rule 44 (swcase)

    stm     go to state 46
    blocks  go to state 31
    exp     go to state 32
    lv      go to state 33
    ifstm   go to state 34
    swstm   go to state 35
    fncc    go to state 36


State 109

   45 swcase: swcase CASE COLON . stms

    ID      shift, and go to state 18
    STRING  shift, and go to state 19
    INT     shift, and go to state 20
    CHAR    shift, and go to state 21
    LBRACE  shift, and go to state 22
    IF      shift, and go to state 23
    WHILE   shift, and go to state 24
    FOR     shift, and go to state 25
    SIZEOF  shift, and go to state 26
    SWITCH  shift, and go to state 27
    NOT     shift, and go to state 28

    stms    go to state 113
    stm     go to state 30
    blocks  go to state 31
    exp     go to state 32
    lv      go to state 33
    ifstm   go to state 34
    swstm   go to state 35
    fncc    go to state 36


State 110

   43 swcases: swcase DEFAULT COLON . stm

    ID      shift, and go to state 18
    STRING  shift, and go to state 19
    INT     shift, and go to state 20
    CHAR    shift, and go to state 21
    LBRACE  shift, and go to state 22
    IF      shift, and go to state 23
    WHILE   shift, and go to state 24
    FOR     shift, and go to state 25
    SIZEOF  shift, and go to state 26
    SWITCH  shift, and go to state 27
    NOT     shift, and go to state 28

    stm     go to state 114
    blocks  go to state 31
    exp     go to state 32
    lv      go to state 33
    ifstm   go to state 34
    swstm   go to state 35
    fncc    go to state 36


State 111

   12 stm: FOR LPAREN exp SEMICOLON exp SEMICOLON exp RPAREN blocks .

    $default  reduce using rule 12 (stm)


State 112

   11 stm: FOR LPAREN exp SEMICOLON exp SEMICOLON exp RPAREN exp . SEMICOLON
   20 exp: exp . COMMA exp
   22    | exp . OR exp
   23    | exp . AND exp
   24    | exp . EQ exp
   25    | exp . NEQ exp
   26    | exp . LT exp
   27    | exp . LE exp
   28    | exp . GT exp
   29    | exp . GE exp
   30    | exp . PLUS exp
   31    | exp . MINUS exp
   32    | exp . TIMES exp
   33    | exp . DIVIDE exp

    COMMA      shift, and go to state 47
    SEMICOLON  shift, and go to state 115
    PLUS       shift, and go to state 49
    MINUS      shift, and go to state 50
    TIMES      shift, and go to state 51
    DIVIDE     shift, and go to state 52
    EQ         shift, and go to state 53
    NEQ        shift, and go to state 54
    LT         shift, and go to state 55
    LE         shift, and go to state 56
    GT         shift, and go to state 57
    GE         shift, and go to state 58
    AND        shift, and go to state 59
    OR         shift, and go to state 60


State 113

    6 stms: stms . stm
   45 swcase: swcase CASE COLON stms .

    ID      shift, and go to state 18
    STRING  shift, and go to state 19
    INT     shift, and go to state 20
    CHAR    shift, and go to state 21
    LBRACE  shift, and go to state 22
    IF      shift, and go to state 23
    WHILE   shift, and go to state 24
    FOR     shift, and go to state 25
    SIZEOF  shift, and go to state 26
    SWITCH  shift, and go to state 27
    NOT     shift, and go to state 28

    $default  reduce using rule 45 (swcase)

    stm     go to state 46
    blocks  go to state 31
    exp     go to state 32
    lv      go to state 33
    ifstm   go to state 34
    swstm   go to state 35
    fncc    go to state 36


State 114

   43 swcases: swcase DEFAULT COLON stm .

    $default  reduce using rule 43 (swcases)


State 115

   11 stm: FOR LPAREN exp SEMICOLON exp SEMICOLON exp RPAREN exp SEMICOLON .

    $default  reduce using rule 11 (stm)
